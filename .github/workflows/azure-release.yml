trigger: 
  tags:
    include:
    - '*'

stages:
- stage: 'Build'
  jobs:
  - job: runTests
    pool:
      vmImage: ubuntu-20.04
      strategy:
        matrix:
          Python38:
            python.version: '3.8'
        maxParallel: 1
    steps:
    - script: |
        python -m pip install --user --upgrade pip setuptools wheel twine
        python -m pip install torch>=1.5 torchvision
      displayName: 'Install dependencies'
    - script: |
        git fetch --depth=1 origin +refs/tags/*:refs/tags/*
        root_dir=$PWD
        echo "$root_dir"
        set -e

        # move packages to a temp dir
        export BUILD_OHIF=false # TODO change back to true
        python setup.py sdist bdist_wheel --build-number $(date +'%Y%m%d%H%M')
        tmp_dir=$(mktemp -d)
        cp dist/monailabel* "$tmp_dir"
        rm -r build monailabel.egg-info
        cd "$tmp_dir"
        ls -al
        cp monailabel*.whl /tmp
      displayName: Prep
    - task: PublishPipelineArtifact@1 #this publishes the build artifact within Azure Pipelines
      inputs:
        targetPath: /tmp/monailabel*.whl
        artifactName: monai-release
    - script: |
        python -m pip install monailabel*.tar.gz
        python -c 'import monailabel; monailabel.print_config()' 2>&1 | grep -iv "unknown"
        python -c 'import monailabel; print(monailabel.__file__)'
        python -m pip uninstall -y monailabel
      displayName: 'Install from tar.gz'
    - script: |
        python -m pip install monailabel*.whl
        python -c 'import monailabel; monailabel.print_config()' 2>&1 | grep -iv "unknown"
        python -c 'import monailabel; print(monailabel.__file__)'
        python -m pip uninstall -y monailabel
      displayName: 'Install from whl'
    - script: |
        python -m pip install pytest
      displayName: 'Install test utilities'
    - script: |
        # Start the monailabel server in the background
        # and run the integration tests
        $root_dir/runtests.sh --net
      displayName: 'Integration Tests'
    - task: GitHubRelease@0
      inputs:
        gitHubConnection: monailabel
        repositoryName: '$(Build.Repository.Name)'
        action: 'edit'
        tagSource: 'manual'
        tag: 0.2.0
        addChangeLog: false 
        assets: /tmp/monailabel*.whl
